{"version":3,"sources":["StyledCanvas.js","Frame.js","sinusoidal.js","abstract.js","abstract-two.js","star-wars.js","App.js","serviceWorker.js","index.js"],"names":["StyledCanvas","styled","canvas","Frame","div","Sinusoidal","canvasEl","useRef","useEffect","current","context","getContext","dpr","window","devicePixelRatio","width","height","scale","lineWidth","lineCap","lineJoin","line","offsetY","size","prevX","prevY","beginPath","gray","toString","strokeStyle","moveTo","x","rate","y","Math","sin","cos","PI","random","lineTo","save","globalCompositeOperation","fill","restore","stroke","ref","rect","fillStyle","points","push","forEach","point","randomRadius","arc","diagonalLines","i","x1","y1","x2","y2","linePoints","vectorLength","p","sqrt","z","scaleVector","v","s","normalizeVector","slerpUnitVectors","p0","p1","t","dot","dotProduct","omega","acos","console","log","v0","v1","d","s0","s1","p0Scaled","p1Scaled","map","angle","generateHorizontalLineAt","p2","segments","floor","xPoint","yPoint","point1","point2","radius","Container","FramesContainer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce00a325.chunk.js","sourcesContent":["import styled from 'styled-components';\nexport const StyledCanvas = styled.canvas`\n  box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.2);\n  height: 320px;\n  width: 320px;\n  background-size: cover;\n  background-position: center center;\n`;\n","import styled from 'styled-components';\nexport const Frame = styled.div`\n  border: 30px solid black;\n  box-shadow: inset -1px 1px 6px 1px rgba(0, 0, 0, 0.24);\n  background: white;\n  align-items: center;\n  display: flex;\n  padding: 40px;\n  box-sizing: border-box;\n  margin-bottom: 30px;\n  box-shadow: -12px 12px 21px 0px rgba(0,0,0,0.23);\n`;\n","import React, { useRef, useEffect } from 'react';\nimport { StyledCanvas } from './StyledCanvas';\nimport { Frame } from './Frame';\n\nfunction Sinusoidal() {\n  const canvasEl = useRef();\n\n  useEffect(() => {\n    const canvas = canvasEl.current;\n    const context = canvas.getContext('2d');\n\n    const size = 320;\n    const dpr = window.devicePixelRatio;\n    canvas.width = size * dpr;\n    canvas.height = size * dpr;\n    context.scale(dpr, dpr);\n\n    context.lineWidth = 1;\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n\n    for(let line = 0; line < 20; line++) {\n      const step = size / 100; //(10 * (line + 1));\n      const offsetY = -10 + (size / 20) * line;\n      let prevX = 0;\n      let prevY = offsetY;\n\n      context.beginPath();\n      const gray = (255 - (line / 20) * 200).toString(16);\n      context.strokeStyle = '#' + gray + gray + gray;\n      context.moveTo(prevX, prevY);\n\n      for(var x=0; x <= size; x += step) {\n        const rate = x / size;\n        const func = line % 2 === 0 ? Math.sin : Math.cos;\n        const y = offsetY + func(rate*Math.PI*2 * 8) * (Math.random() * 11); // * (line / 20) * 2;\n\n        context.lineTo(x, y);\n\n        prevX = x;\n        prevY = y;\n      }\n\n      context.save();\n      context.globalCompositeOperation = 'destination-out';\n      context.fill();\n      context.restore();\n\n      context.stroke();\n    }\n  }, []);\n\n  return (\n    <div>\n      <p>Sinusoidal</p>\n      <Frame>\n        <StyledCanvas ref={canvasEl}></StyledCanvas>\n      </Frame>\n    </div>\n  );\n}\n\nexport default Sinusoidal;\n","import React, { useRef, useEffect } from 'react';\nimport { StyledCanvas } from './StyledCanvas';\nimport { Frame } from './Frame';\n\nexport default () => {\n  const canvasEl = useRef();\n\n  useEffect(() => {\n    const canvas = canvasEl.current;\n    const context = canvas.getContext('2d');\n\n    const size = 320;\n    const dpr = window.devicePixelRatio;\n    canvas.width = size * dpr;\n    canvas.height = size * dpr;\n    context.scale(dpr, dpr);\n\n    context.beginPath();\n    context.rect(0, 0, size, size);\n    context.fillStyle = \"#000\";\n    context.fill();\n\n    const points = [];\n    const step = size / 10;\n    const offset = size / 2;\n    for (let x = 0; x <= size; x += step) {\n      const rate = x / size;\n      const y = offset + Math.sin(rate * 2 * Math.PI) * 40;\n      points.push({x, y});\n    }\n\n    points.forEach(point => {\n      context.beginPath();\n      const randomRadius = 3 + Math.random() * 10;\n      context.arc(point.x, point.y, randomRadius, 0, 2 * Math.PI);\n      context.strokeStyle = \"#fff\";\n      context.stroke();\n    });\n\n  }, []);\n\n  return (\n    <div>\n      <p>Sinusoidal circles</p>\n      <Frame>\n        <StyledCanvas ref={canvasEl}></StyledCanvas>\n      </Frame>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { StyledCanvas } from './StyledCanvas';\nimport { Frame } from './Frame';\n\nexport default () => {\n  const canvasEl = useRef();\n\n  useEffect(() => {\n    const canvas = canvasEl.current;\n    const context = canvas.getContext('2d');\n\n    const size = 320;\n    const dpr = window.devicePixelRatio;\n    canvas.width = size * dpr;\n    canvas.height = size * dpr;\n    context.scale(dpr, dpr);\n\n    context.beginPath();\n    context.rect(0, 0, size, size);\n    context.fillStyle = \"#ee068e\";\n    context.fill();\n\n    const points = [];\n    const step = size / 10;\n    const offset = 50;\n    for (let x = 0; x <= size; x += step) {\n      const rate = x / size;\n      const y = offset + Math.sin(rate * 2 * Math.PI) * 40;\n      points.push({x, y});\n    }\n\n    const diagonalLinesCount = 10;\n    const diagonalLines = [];\n    for(let i=0; i < diagonalLinesCount; i++) {\n      const x1 = Math.random() * size;\n      const y1 = Math.random() * size;\n      const x2 = Math.random() * size;\n      const y2 = Math.random() * size;\n\n      diagonalLines.push({\n        x1: x1 < y1 ? 0 : x1,\n        y1: y1 < x1 ? 0 : y1,\n        x2: x2 > y2 ? size : x2,\n        y2: y2 > x2 ? size : y2,\n      });\n    }\n\n    points.forEach(point => {\n      context.beginPath();\n      context.arc(point.x, point.y, 2, 0, 2 * Math.PI);\n      context.fillStyle = \"#fff\";\n      context.strokeStyle = \"#fff\";\n      context.fill();\n      context.stroke();\n\n      context.beginPath();\n      context.moveTo(point.x, point.y);\n      context.lineTo(point.x, size);\n      context.stroke();\n    });\n\n    diagonalLines.forEach(linePoints => {\n      context.beginPath();\n      context.moveTo(linePoints.x1, linePoints.y1);\n      context.lineTo(linePoints.x2, linePoints.y2);\n      context.strokeStyle = Math.random() < 0.5 ? \"black\" : \"white\";\n      context.stroke();\n    });\n  }, []);\n\n  return (\n    <div>\n      <p>Abstract</p>\n      <Frame>\n        <StyledCanvas ref={canvasEl}></StyledCanvas>\n      </Frame>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { StyledCanvas } from './StyledCanvas';\nimport { Frame } from './Frame';\n\nfunction vectorLength(p) {\n  return Math.sqrt(p.x*p.x + p.y*p.y + p.z*p.z);\n}\n\nfunction dotProduct(p0, p1) {\n  return p0.x * p1.x + p0.y * p1.y + p0.z * p1.z;\n}\n\nfunction scaleVector(v, s) {\n  return {\n    x: v.x * s,\n    y: v.y * s,\n    z: v.z * s,\n  };\n}\n\nfunction addVectors(v0, v1) {\n  return {\n    x: v0.x + v1.x,\n    y: v0.y + v1.y,\n    z: v0.z + v1.z,\n  };\n}\n\nfunction normalizeVector(v) {\n  return {\n    x: v.x / vectorLength(v),\n    y: v.y / vectorLength(v),\n    z: v.z / vectorLength(v),\n  };\n}\n\nfunction slerpUnitVectors(p0, p1, t) {\n  const dot = dotProduct(p0, p1);\n  const omega = Math.acos(dot);\n  console.log(p0);\n  console.log(p1);\n  console.log(`dot = ${dot}`);\n  console.log(`omega = ${omega}`);\n  const d = Math.sin(omega);\n  const s0 = Math.sin((1 - t) * omega);\n  const s1 = Math.sin(t * omega);\n  const p0Scaled = scaleVector(p0, s0);\n  const p1Scaled = scaleVector(p1, s1);\n  return scaleVector(addVectors(p0Scaled, p1Scaled), 1/d);\n}\n\nexport default () => {\n  const canvasEl = useRef();\n\n  useEffect(() => {\n    const canvas = canvasEl.current;\n    const context = canvas.getContext('2d');\n\n    const size = 320;\n    const dpr = window.devicePixelRatio;\n    canvas.width = size * dpr;\n    canvas.height = size * dpr;\n    context.scale(dpr, dpr);\n\n    context.beginPath();\n    context.rect(0, 0, size, size);\n    context.fillStyle = \"#fdfbed\";\n    context.fill();\n\n    const radius = 100;\n    context.beginPath();\n    context.arc(size / 2, size / 2, radius, 0, 2 * Math.PI);\n    context.stroke();\n\n    function generateHorizontalLineAt(angle) {\n      const x = Math.cos(angle) * radius;\n      const y = Math.sin(angle) * radius;\n      return [\n        {x, y},\n        {x: -x, y}\n      ];\n    }\n\n    function drawHorizontalLineAt(p1, p2) {\n      context.beginPath();\n      context.moveTo(size / 2 + p1.x, size / 2 + p1.y);\n      context.lineTo(size / 2 + p2.x, size / 2 + p2.y);\n      context.stroke();\n    }\n\n    const anglesForHorizontalLines = [\n      Math.PI / 40,\n      -Math.PI / 40,\n      Math.PI / 1000,\n      -Math.PI / 1000,\n      Math.PI / 6,\n      -Math.PI / 6,\n      Math.PI / 4,\n      -Math.PI / 4,\n    ];\n    const horizontalLines = anglesForHorizontalLines.map(\n      angle => generateHorizontalLineAt(angle),\n    );\n\n    horizontalLines.forEach(line => {\n      drawHorizontalLineAt(line[0], line[1]);\n\n      const segments = Math.floor(Math.random() * 5);\n      for(let i = 0; i < segments; i++) {\n        const xPoint = Math.random() * line[1].x * (Math.random() < 0.5 ? -1 : 1);\n        const yPoint = line[0].y;\n        const point1 = {\n          x: xPoint,\n          y: yPoint,\n          z: 25,\n        };\n        const point2 = {\n          x: xPoint,\n          y: yPoint + 10,\n          z: 25,\n        };\n\n        const totalPoints = 20;\n        const point = slerpUnitVectors(normalizeVector(point1), normalizeVector(point2), 0);\n        context.beginPath();\n        context.moveTo(size/2 + point.x * radius, size/2 + point.y * radius);\n        for(let i = 1; i <= totalPoints; i++) {\n          const rate = i / totalPoints;\n          const point = slerpUnitVectors(normalizeVector(point1), normalizeVector(point2), rate);\n          context.lineTo(size/2 + point.x * radius, size/2 + point.y * radius);\n        }\n        context.stroke();\n      }\n    });\n\n    function drawOblo(x) {\n      context.beginPath();\n      context.arc(size / 2 + x, size / 2 - 45, radius/3, 0, 2 * Math.PI);\n      context.fillStyle = \"#fdfbed\";\n      context.fill();\n      context.stroke();\n\n      context.beginPath();\n      context.arc(size / 2 + x, size / 2 - 45, radius/3.2, 0, 2 * Math.PI);\n      context.stroke();\n\n      context.beginPath();\n      context.arc(size / 2 + x, size / 2 - 45, radius/4, 0, 2 * Math.PI);\n      context.stroke();\n\n      context.beginPath();\n      context.arc(size / 2 + x, size / 2 - 45, radius/6, 0, 2 * Math.PI);\n      context.stroke();\n\n      context.beginPath();\n      context.arc(size / 2 + x, size / 2 - 45, radius/50, 0, 2 * Math.PI);\n      context.stroke();\n    }\n\n    drawOblo(-20 + Math.random() * 40);\n\n  }, []);\n\n  return (\n    <div>\n      <p>Death Star</p>\n      <Frame>\n        <StyledCanvas ref={canvasEl}></StyledCanvas>\n      </Frame>\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Sinusoidal from './sinusoidal';\nimport Abstract from './abstract';\nimport AbstractTwo from './abstract-two';\nimport StarWars from './star-wars';\nimport './App.css';\n\nconst Container = styled.div`\n  width: 80%;\n  margin: auto;\n  margin-top: 50px;\n`;\n\nconst FramesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: left;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <FramesContainer>\n        <h1>Generative art gallery</h1>\n        <StarWars />\n        <AbstractTwo />\n        <Abstract />\n        <Sinusoidal />\n      </FramesContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}